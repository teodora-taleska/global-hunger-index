theme_minimal() +
xlim(0, 75) +
ylim(0, 0.06)
# Add the plot to the list
plots[[i]] <- plot
}
# Define the columns
cols <- c(2000, 2006, 2012, 2021)
# Create an empty list to store the plots
plots <- list()
# Loop through the columns
for (i in 1:length(cols)) {
# Filter the data for the specific year
data <- subset(ghi, Year == cols[i])$Global.Hunger.Index..2021. %>% data.frame()
# Create the histogram plot
plot <- ggplot(data, aes(x = Global.Hunger.Index..2021.)) +
geom_histogram(binwidth = 5, fill = "steelblue", color = "white") +
labs(title = cols[i], x = "Global Hunger Index (2021)", y = "Count") +
theme_minimal() +
xlim(0, 75) +
ylim(0, 0.06)
# Add the plot to the list
plots[[i]] <- plot
}
# Arrange the plots in a grid layout
grid.arrange(grobs = plots, ncol = 4)
# Define the columns
cols <- c(2000, 2006, 2012, 2021)
# Create an empty list to store the plots
plots <- list()
# Loop through the columns
for (i in 1:length(cols)) {
# Filter the data for the specific year
data <- subset(ghi, Year == cols[i])$Global.Hunger.Index..2021. %>% data.frame()
# Create the histogram plot
plot <- ggplot(ghi, aes(x = Global.Hunger.Index..2021.)) +
geom_histogram(binwidth = 5, fill = "steelblue", color = "white") +
labs(title = cols[i], x = "Global Hunger Index (2021)", y = "Count") +
theme_minimal() +
xlim(0, 75) +
ylim(0, 0.06)
# Add the plot to the list
plots[[i]] <- plot
}
# Arrange the plots in a grid layout
grid.arrange(grobs = plots, ncol = 4)
filtered_data <- ghi %>%
filter(Year >= 2000 & Year <= 2021)
# Create the Hunger Index Distribution plot
plot <- ggplot(filtered_data, aes(x = `Global Hunger Index (2021)`)) +
geom_histogram(binwidth = 5, fill = "steelblue", color = "white") +
labs(title = "Hunger Index Distribution (2000-2021)",
x = "Global Hunger Index (2021)",
y = "Count") +
theme_minimal()
# Display the plot
print(plot)
filtered_data <- ghi %>%
filter(Year >= 2000 & Year <= 2021)
# Create the Hunger Index Distribution plot
plot <- ggplot(filtered_data, aes(x = Global.Hunger.Index..2021.)) +
geom_histogram(binwidth = 5, fill = "steelblue", color = "white") +
labs(title = "Hunger Index Distribution (2000-2021)",
x = "Global Hunger Index (2021)",
y = "Count") +
theme_minimal()
# Display the plot
print(plot)
# Group the data by country and year and calculate the total GHI
total_ghi <- ghi %>%
group_by(Entity, Year) %>%
summarise(Total_GHI = sum(Global.Hunger.Index..2021.))
# Create the histogram plot
plot <- ggplot(total_ghi, aes(x = Total_GHI)) +
geom_histogram(binwidth = 10, fill = "steelblue", color = "white") +
labs(title = "Total Global Hunger Index per Year",
x = "Total GHI",
y = "Count") +
theme_minimal()
# Display the plot
print(plot)
# Group the data by country and year and calculate the total GHI
total_ghi <- ghi %>%
group_by(Year) %>%
summarise(Total_GHI = sum(Global.Hunger.Index..2021.))
# Create the histogram plot
plot <- ggplot(total_ghi, aes(x = Year, y = Total_GHI)) +
geom_col(fill = "steelblue", color = "white") +
labs(title = "Total Global Hunger Index per Year",
x = "Year",
y = "Total GHI") +
theme_minimal()
# Rotate x-axis labels for better visibility
plot <- plot + theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(plot)
# Group the data by country and year and calculate the total GHI
total_ghi <- ghi %>%
group_by(Entity) %>%
summarise(Total_GHI = sum(Global.Hunger.Index..2021.))
# Create the histogram plot
plot <- ggplot(total_ghi, aes(x = Total_GHI, y = Entity)) +
geom_col(fill = "steelblue", color = "white") +
labs(title = "Total Global Hunger Index per Country",
x = "Total GHI",
y = "Country") +
theme_minimal()
# Display the plot
print(plot)
# Filter the data for the year 2012
ghi_2012 <- ghi %>%
filter(Year == 2021)
# Create the histogram plot
plot <- ggplot(ghi_2012, aes(x = Entity, y = Global.Hunger.Index..2021., fill = Entity)) +
geom_col(color = "white") +
labs(title = "Total Global Hunger Index per Country in 2012",
x = "Country",
y = "Total GHI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(plot)
# Filter the data for the year 2021
ghi_2021 <- ghi %>%
filter(ghi$Year == 2021)
# Create the histogram plot
plot <- ggplot(ghi_2012, aes(x = Entity, y = Global.Hunger.Index..2021., fill = Entity)) +
geom_col(color = "white") +
labs(title = "Total Global Hunger Index per Country in 2012",
x = "Country",
y = "Total GHI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(plot)
csv_dir <- paste0(getwd(), "/archive")
ghi <- read.csv(paste0(csv_dir, "/global-hunger-index.csv")) %>% data.frame()
underweight <- read.csv(paste0(csv_dir, "/share-of-children-underweight.csv"))%>% data.frame()
wasting <- read.csv(paste0(csv_dir, "/share-of-children-with-a-weight-too-low-for-their-height-wasting.csv"))%>% data.frame()
stunting <- read.csv(paste0(csv_dir, "/share-of-children-younger-than-5-who-suffer-from-stunting.csv"))%>% data.frame()
datatable(ghi, rownames = F, filter = "top", caption = "Global Hunger Index", options = list(searching = F, pageLength =5 , lengthMenu=c(5, 10, 15, 20), scrollX=T, autoWidth=T))
datatable(underweight, rownames = F, filter = "top", caption = "Share of underweight children ", options = list(searching = F, pageLength =5 , lengthMenu=c(5, 10, 15, 20), scrollX=T, autoWidth=T))
ghi_2021 <- ghi %>%
filter(ghi$Year == 2021)
# Create the histogram plot
plot <- ggplot(ghi_2021, aes(x = Entity, y = Global.Hunger.Index..2021., fill = Entity)) +
geom_col(color = "white") +
labs(title = "Total Global Hunger Index per Country in 2021",
x = "Country",
y = "Total GHI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(plot)
ghi_2021 <- ghi %>%
filter(ghi$Year == 2021)
# Create the histogram plot
plot <- ggplot(ghi_2021, aes(x = Entity, y = Global.Hunger.Index..2021., fill = Entity)) +
geom_histogram(stat = "identity", fill = "steelblue", color = "white") +
labs(title = "Global Hunger Index Distribution for Year 2021",
x = "Country",
y = "Total GHI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Display the plot
print(plot)
col <- c(2000, 2006, 2012, 2021)
df <- dfi %>%
filter(Year %in% col) %>%
select(Year, Global.Hunger.Index..2021.)
col <- c(2000, 2006, 2012, 2021)
df <- dhi %>%
filter(Year %in% col) %>%
select(Year, Global.Hunger.Index..2021.)
col <- c(2000, 2006, 2012, 2021)
df <- dhi %>%
dplyr::filter(dhi$Year %in% col) %>%
select(dhi$Year, Global.Hunger.Index..2021.)
col <- c(2000, 2006, 2012, 2021)
df <- ghi %>%
dplyr::filter(ghi$Year %in% col) %>%
select(ghi$Year, Global.Hunger.Index..2021.)
col <- c(2000, 2006, 2012, 2021)
df <- ghi %>%
dplyr::filter(ghi$Year %in% col) %>%
dplyr::select(ghi$Year, Global.Hunger.Index..2021.)
col <- c(2000, 2006, 2012, 2021)
df <- ghi %>%
filter(Year %in% col) %>%
select(Year, Global.Hunger.Index..2021.)
# Create the violin plot
df %>%
ggplot(aes(x = Year, y = Global.Hunger.Index..2021.)) +
geom_violin(fill = "steelblue", color = "white") +
labs(x = "Year", y = "Hunger Index") +
theme_minimal()
col <- c(2000, 2006, 2012, 2021)
df <- ghi %>%
filter(ghi$Year %in% col) %>%
select(Year, Global.Hunger.Index..2021.)
# Create the violin plot
df %>%
ggplot(aes(x = Year, y = Global.Hunger.Index..2021.)) +
geom_violin(fill = "steelblue", color = "white") +
labs(x = "Year", y = "Hunger Index") +
theme_minimal()
col <- c(2000, 2006, 2012, 2021)
df <- ghi %>%
filter(ghi$Year %in% col) %>%
# Create the violin plot
df %>%
ggplot(aes(x = Year, y = Global.Hunger.Index..2021.)) +
geom_violin(fill = "steelblue", color = "white") +
labs(x = "Year", y = "Hunger Index") +
theme_minimal()
col <- c(2000, 2006, 2012, 2021)
df <- ghi %>%
filter(ghi$Year %in% col)
# Create the violin plot
df %>%
ggplot(aes(x = Year, y = Global.Hunger.Index..2021.)) +
geom_violin(fill = "steelblue", color = "white") +
labs(x = "Year", y = "Hunger Index") +
theme_minimal()
col <- c(2000, 2006, 2012, 2021)
df <- ghi %>%
filter(ghi$Year %in% col)
# Create the violin plot
df %>%
ggplot(aes(x = Year, y = Global.Hunger.Index..2021.)) +
geom_violin(fill = "steelblue", color = "white") +
labs(x = "Year", y = "Hunger Index") +
theme_minimal()
# Plot the stacked bar chart
ggplot(undernourished_ppl, aes(x = Entity, y = Year, fill = Total_prevalence_underweight)) +
geom_bar(stat = "identity") +
labs(x = "Entity", y = "Year", fill = "Prevalence of Underweight") +
scale_fill_manual(values = c("Total_prevalence_underweight" = "#CD5C5C"),
labels = c("Total_prevalence_underweight")) +
theme_minimal()
col <- c(2000, 2006, 2012, 2021)
df <- ghi %>%
filter(ghi$Year %in% col) %>% data.frame()
# Create the violin plot
df %>% ggplot( aes(x = ghi$Year, y = ghi$Global.Hunger.Index..2021.)) +
geom_violin(fill = "#CD5C5C", color = "white") +
labs(x = "Year", y = "Hunger Index") +
theme_minimal()
# Filter the data for Afghanistan
somalia <- underweight %>%
filter(Entity == "Somalia")
# Create the area plot
ggplot(somalia, aes(x = Year, y = Prevalence.of.underweight..weight.for.age....of.children.under.5., fill = Entity)) +
geom_area(alpha = 0.7) +
labs(x = "Year", y = "Prevalence of Underweight (%)", fill = "Country") +
scale_fill_manual(values = c("Somalia" = "#CD5C5C")) +
theme_minimal()
# Filter the data for Afghanistan
somalia <- underweight %>%
filter(underweight$Entity == "Somalia") %>% data.frame()
# Create the area plot
ggplot(somalia, aes(x = underweight$Year, y = underweight$Prevalence.of.underweight..weight.for.age....of.children.under.5., fill = underweight$Entity)) +
geom_area(alpha = 0.7) +
labs(x = "Year", y = "Prevalence of Underweight (%)", fill = "Country") +
scale_fill_manual(values = c("Somalia" = "#CD5C5C")) +
theme_minimal()
# Filter the data for Afghanistan
somalia <- underweight %>%
filter(underweight$Entity == "Somalia") %>% data.frame()
somalia
# Create the area plot
ggplot(somalia, aes(x = underweight$Year, y = underweight$Prevalence.of.underweight..weight.for.age....of.children.under.5., fill = underweight$Entity)) +
geom_area(alpha = 0.7) +
labs(x = "Year", y = "Prevalence of Underweight (%)", fill = "Country") +
scale_fill_manual(values = c("Somalia" = "#CD5C5C")) +
theme_minimal()
# Filter the data for Afghanistan
somalia <- underweight %>%
filter(underweight$Entity == "Somalia") %>% data.frame()
somalia
# Create the area plot
somalia %>% ggplot(aes(x = Year, y = Prevalence.of.underweight..weight.for.age....of.children.under.5., fill = Entity)) +
geom_area(alpha = 0.7) +
labs(x = "Year", y = "Prevalence of Underweight (%)", fill = "Country") +
scale_fill_manual(values = c("Somalia" = "#CD5C5C")) +
theme_minimal()
# Filter the data for Afghanistan
somalia <- underweight %>%
filter(underweight$Entity == "Somalia") %>% data.frame()
# Create the area plot
ggplot(somalia, aes(x = underweight$Year, y = underweight$Prevalence.of.underweight..weight.for.age....of.children.under.5., fill = underweight$Entity)) +
geom_density(alpha = 0.5) +
labs(x = "Prevalence of Underweight (%)", fill = "Country") +
scale_fill_manual(values = c("Somalia" = "#CD5C5C")) +
theme_minimal()
# Filter the data for Afghanistan
somalia <- underweight %>%
filter(underweight$Entity == "Somalia")
somaliadf <- somalia %>% data.frame()
# Create the area plot
ggplot(somaliadf, aes(x = somalia$Year, y = somalia$Prevalence.of.underweight..weight.for.age....of.children.under.5., fill = somalia$Entity)) +
geom_line(color = "#CD5C5C") +
labs(x = "Year", y = "Prevalence of Underweight (%)", fill = "Country") +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE)
# Filter the data for Afghanistan
somalia <- underweight %>%
filter(underweight$Entity == "Somalia")
somaliadf <- somalia %>% data.frame()
# Create the area plot
ggplot(somaliadf, aes(x = somaliadf$Year, y = somaliadf$Prevalence.of.underweight..weight.for.age....of.children.under.5., fill = somaliadf$Entity)) +
geom_line(color = "#CD5C5C") +
labs(x = "Year", y = "Prevalence of Underweight (%)", fill = "Country") +
theme_minimal()
# Filter the data for Afghanistan
somalia <- underweight %>%
filter(underweight$Entity == "Somalia")
somaliadf <- somalia %>% data.frame()
# Create the area plot
ggplot(somaliadf, aes(x = somaliadf$Year, y = somaliadf$Prevalence.of.underweight..weight.for.age....of.children.under.5., fill = somaliadf$Entity)) +
geom_line(color = "#CD5C5C") +
labs(x = "Year", y = "Prevalence of Underweight (%)", fill = "Country") +
theme_minimal()
somalia <- underweight %>%
filter(Entity == "Somalia")
# Create the box plot
ggplot(somalia, aes(x = Year, y = `Prevalence of underweight, weight for age (% of children under 5)`)) +
geom_boxplot(fill = "steelblue", color = "black") +
labs(x = "Year", y = "Prevalence of Underweight (%)") +
theme_minimal()
col <- c(2000, 2006, 2012, 2021)
df <- ghi %>%
filter(ghi$Year %in% col) %>% data.frame()
# Create the violin plot
df %>% ggplot( aes(x = df$Year, y = df$Global.Hunger.Index..2021.)) +
geom_violin(fill = "#CD5C5C", color = "white") +
labs(x = "Year", y = "Hunger Index") +
theme_minimal()
# Filter the data for the top 10 countries
top_10_countries <- underweight %>%
group_by(underweight$Entity) %>%
summarize(Average_Prevalence = mean(Prevalence.of.underweight..weight.for.age....of.children.under.5.)) %>%
top_n(10)
# Filter the data for the top 10 countries only
filtered_data <- underweight %>%
filter(Entity %in% top_10_countries$Entity)
# Create the line plot
ggplot(filtered_data, aes(x = Year, y = Prevalence.of.underweight..weight.for.age....of.children.under.5., color = Entity)) +
geom_line() +
labs(x = "Year", y = "Prevalence of Underweight (%)", color = "Country") +
theme_minimal()
# Filter the data for the top 10 countries
top_10_countries <- underweight %>%
group_by(underweight$Entity) %>%
summarize(Average_Prevalence = mean(Prevalence.of.underweight..weight.for.age....of.children.under.5.)) %>%
top_n(10)
# Filter the data for the top 10 countries only
filtered_data <- underweight %>%
filter(underweight$Entity %in% top_10_countries$Entity)
# Create the line plot
ggplot(filtered_data, aes(x = Year, y = Prevalence.of.underweight..weight.for.age....of.children.under.5., color = Entity)) +
geom_line() +
labs(x = "Year", y = "Prevalence of Underweight (%)", color = "Country") +
theme_minimal()
# Filter the data for the top 10 countries
top_10_countries <- underweight %>%
group_by(underweight$Entity) %>%
summarize(Average_Prevalence = mean(Prevalence.of.underweight..weight.for.age....of.children.under.5.)) %>%
top_n(10)
# Filter the data for the top 10 countries only
filtered_data <- underweight %>%
filter(underweight$Entity %in% top_10_countries$Entity) %>% data.frame()
# Create the line plot
ggplot(filtered_data, aes(x = filtered_data$Year, y = filtered_data$Prevalence.of.underweight..weight.for.age....of.children.under.5., color = filtered_data$Entity)) +
geom_line() +
labs(x = "Year", y = "Prevalence of Underweight (%)", color = "Country") +
theme_minimal()
# Filter the data for the top 10 countries
top_10_countries <- underweight %>%
group_by(underweight$Entity) %>%
summarize(Average_Prevalence = mean(Prevalence.of.underweight..weight.for.age....of.children.under.5.)) %>%
top_n(10)
top_1
# Filter the data for the top 10 countries
top_10_countries <- underweight %>%
group_by(underweight$Entity) %>%
summarize(Average_Prevalence = mean(Prevalence.of.underweight..weight.for.age....of.children.under.5.)) %>%
top_n(10)
# Filter the data for the top 10 countries only
filtered_data <- underweight %>%
filter(underweight$Entity %in% top_10_countries$`underweight$Entity`) %>% data.frame()
# Create the line plot
ggplot(filtered_data, aes(x = filtered_data$Year, y = filtered_data$Prevalence.of.underweight..weight.for.age....of.children.under.5., color = filtered_data$Entity)) +
geom_line() +
labs(x = "Year", y = "Prevalence of Underweight (%)", color = "Country") +
theme_minimal()
# Filter the data for the top 10 countries
top_10_countries <- underweight %>%
group_by(underweight$Entity) %>%
summarize(Average_Prevalence = mean(Prevalence.of.underweight..weight.for.age....of.children.under.5.)) %>%
top_n(10)
# Filter the data for the top 10 countries only
filtered_data <- underweight %>%
dplyr::filter(underweight$Entity %in% top_10_countries$`underweight$Entity`) %>% data.frame()
# Create the line plot
ggplot(filtered_data, aes(x = top_10_countries$Year, y = top_10_countries$Prevalence.of.underweight..weight.for.age....of.children.under.5., color = top_10_countries$Entity)) +
geom_line() +
labs(x = "Year", y = "Prevalence of Underweight (%)", color = "Country") +
theme_minimal()
# Filter the data for the top 10 countries
top_10_countries <- underweight %>%
group_by(underweight$Entity) %>%
summarize(Average_Prevalence = mean(Prevalence.of.underweight..weight.for.age....of.children.under.5.)) %>%
top_n(10, wt=Average_Prevalence)
# Filter the data for the top 10 countries only
filtered_data <- underweight %>%
dplyr::filter(underweight$Entity %in% top_10_countries$`underweight$Entity`) %>% data.frame()
filtered_data$Year <- as.numeric(as.character(filtered_data$Year))
# Create the line plot
ggplot(filtered_data, aes(x = top_10_countries$Year, y = top_10_countries$Prevalence.of.underweight..weight.for.age....of.children.under.5., color=Entity)) +
geom_line() +
labs(x = "Year", y = "Prevalence of Underweight (%)", color = "Country") +
theme_minimal()
# Filter the data for the top 10 countries
top_10_countries <- underweight %>%
group_by(underweight$Entity) %>%
summarize(Average_Prevalence = mean(Prevalence.of.underweight..weight.for.age....of.children.under.5.)) %>%
top_n(10)
# Filter the data for the top 10 countries only
filtered_data <- underweight %>%
filter(underweight$Entity %in% top_10_countries$`underweight$Entity`) %>% data.frame()
# Create the line plot
ggplot(filtered_data, aes(x = filtered_data$Year, y = filtered_data$Prevalence.of.underweight..weight.for.age....of.children.under.5., color = filtered_data$Entity)) +
geom_line(aes(group = filtered_data$Entity)) +
labs(x = "Year", y = "Prevalence of Underweight (%)", color = "Country") +
theme_minimal()
# Filter the data for the top 10 countries
top_10_countries <- underweight %>%
group_by(underweight$Entity) %>%
summarize(Average_Prevalence = mean(Prevalence.of.underweight..weight.for.age....of.children.under.5.)) %>%
top_n(10)
# Filter the data for the top 10 countries only
filtered_data <- underweight %>%
filter(underweight$Entity %in% top_10_countries$`underweight$Entity`) %>% data.frame()
# Create the line plot
ggplot(filtered_data, aes(x = filtered_data$Year, y = filtered_data$Prevalence.of.underweight..weight.for.age....of.children.under.5., color = filtered_data$Entity)) +
geom_line(aes(group = filtered_data$Entity)) +
labs(x = "Year", y = "Prevalence of Underweight (%)", color = "Country") +
theme_minimal()
# Filter the data for the top 10 countries
top_10_countries <- underweight %>%
group_by(underweight$Entity) %>%
summarize(Average_Prevalence = mean(Prevalence.of.underweight..weight.for.age....of.children.under.5.)) %>%
top_n(10)
# Filter the data for the top 10 countries only
filtered_data <- underweight %>%
filter(underweight$Entity %in% top_10_countries$`underweight$Entity`) %>% data.frame()
# Create the line plot
ggplot(filtered_data, aes(x = filtered_data$Year, y = filtered_data$Prevalence.of.underweight..weight.for.age....of.children.under.5., color = filtered_data$Entity)) +
geom_line(aes(group = filtered_data$Entity)) +
labs(x = "Year", y = "Prevalence of Underweight (%)", color = "Country") +
theme_minimal()
# Filter the data for the top 10 countries
top_10_countries <- underweight %>%
group_by(underweight$Entity) %>%
summarize(Average_Prevalence = mean(Prevalence.of.underweight..weight.for.age....of.children.under.5.)) %>%
top_n(10)
# Filter the data for the top 10 countries only
filtered_data <- underweight %>%
filter(underweight$Entity %in% top_10_countries$`underweight$Entity`) %>% data.frame()
# Create the line plot
ggplot(filtered_data, aes(x = filtered_data$Year, y = filtered_data$Prevalence.of.underweight..weight.for.age....of.children.under.5., color = filtered_data$Entity)) +
geom_line(aes(group = filtered_data$Entity)) +
labs(x = "Year", y = "Prevalence of Underweight (%)", color = "Country") +
theme_minimal()
library(knitr)
# Filter the data for the top 10 countries
top_10_countries <- underweight %>%
group_by(underweight$Entity) %>%
summarize(Average_Prevalence = mean(Prevalence.of.underweight..weight.for.age....of.children.under.5.)) %>%
top_n(10)
# Filter the data for the top 10 countries only
filtered_data <- underweight %>%
filter(underweight$Entity %in% top_10_countries$`underweight$Entity`) %>% data.frame()
# Create the line plot
ggplot(filtered_data, aes(x = filtered_data$Year, y = filtered_data$Prevalence.of.underweight..weight.for.age....of.children.under.5., color = filtered_data$Entity)) +
geom_line(aes(group = filtered_data$Entity)) +
labs(x = "Year", y = "Prevalence of Underweight (%)", color = "Country") +
theme_minimal()
library(knitr)
library(ggplot2)
# Filter the data for the top 10 countries
top_10_countries <- underweight %>%
group_by(underweight$Entity) %>%
summarize(Average_Prevalence = mean(Prevalence.of.underweight..weight.for.age....of.children.under.5.)) %>%
top_n(10)
# Filter the data for the top 10 countries only
filtered_data <- underweight %>%
filter(underweight$Entity %in% top_10_countries$`underweight$Entity`) %>% data.frame()
# Create the line plot
ggplot2::ggplot(filtered_data, aes(x = filtered_data$Year, y = filtered_data$Prevalence.of.underweight..weight.for.age....of.children.under.5., color = filtered_data$Entity)) +
geom_line(aes(group = filtered_data$Entity)) +
labs(x = "Year", y = "Prevalence of Underweight (%)", color = "Country") +
theme_minimal()
# Filter the data for the top 10 countries only
filtered_data <- underweight %>%
filter(underweight$Entity %in% top_10_countries$`underweight$Entity`) %>% data.frame()
# Create the line plot
ggplot2::ggplot(filtered_data, aes(x = filtered_data$Year, y = filtered_data$Prevalence.of.underweight..weight.for.age....of.children.under.5., color = filtered_data$Entity)) +
geom_line(aes(group = filtered_data$Entity)) +
labs(x = "Year", y = "Prevalence of Underweight (%)", color = "Country") +
theme_minimal()
